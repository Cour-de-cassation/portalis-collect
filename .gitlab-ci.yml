image: docker:$DOCKER_BUILD_VERSION_NEW
services:
  - docker:$DOCKER_BUILD_VERSION_NEW-dind

variables:
  PROJECT_VERSION: "1.0.0"

stages:
  - build
  - dev
  - preprod
  - prod

before_script:
  - echo "Logging in to Docker registry..."
  - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  - |
    if [ "$CI_DEFAULT_BRANCH" != "$CI_COMMIT_REF_NAME" ]; then
      export BRANCH_SUFFIX="${CI_COMMIT_REF_NAME}-"
    else
      export BRANCH_SUFFIX=""
    fi
  - export docker_image_dev="$CI_REGISTRY/$CI_PROJECT_PATH:${BRANCH_SUFFIX}latest-dev"
  - export docker_image="$CI_REGISTRY/$CI_PROJECT_PATH:${BRANCH_SUFFIX}latest"
  - export docker_image_version="$CI_REGISTRY/$CI_PROJECT_PATH:${BRANCH_SUFFIX}$PROJECT_VERSION"

build_dev:
  stage: build
  script:
    - docker build
        --build-arg http_proxy=$HTTP_PROXY
        --build-arg https_proxy=$HTTPS_PROXY
        -f dockerfile.dev
        -t $docker_image_dev .
    - docker push $docker_image_dev
  tags:
    - docker

build:
  stage: build
  script:
    - docker build
        --build-arg http_proxy=$HTTP_PROXY
        --build-arg https_proxy=$HTTPS_PROXY
        -f Dockerfile
        -t $docker_image .
    - docker push $docker_image
    - docker tag $docker_image $docker_image_version
    - docker push $docker_image_version
  tags:
    - docker

dev:
  stage: dev
  variables:
    IMAGE_URL: "$docker_image_dev"
  script:
    - echo "IMAGE_URL $IMAGE_URL"
    - echo "docker_image_dev $docker_image_dev"
    - docker pull $docker_image_dev
    - inventaire=$(eval "echo \$$CI_COMMIT_BRANCH")
    - mkdir /root/.ssh
    - cat $SSH_KEY > /root/.ssh/id_rsa
    - cat $KNOWN_HOSTS > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/known_hosts
  tags:
    - docker
  needs:
    - build

preprod:
  stage: preprod
  variables:
    IMAGE_URL: $docker_image
  script:
    - docker pull $docker_image
    - inventaire=$(eval "echo \$$CI_COMMIT_BRANCH")
    - mkdir /root/.ssh
    - cat $SSH_KEY > /root/.ssh/id_rsa
    - cat $KNOWN_HOSTS > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/known_hosts
  tags:
    - docker
  needs:
    - build

prod:
  stage: prod
  variables:
    IMAGE_URL: $docker_image
  script:
    - docker pull $docker_image
    - inventaire=$(eval "echo \$$CI_COMMIT_BRANCH")
    - mkdir /root/.ssh
    - cat $SSH_KEY > /root/.ssh/id_rsa
    - cat $KNOWN_HOSTS > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/known_hosts
  tags:
    - docker
  needs:
    - build

